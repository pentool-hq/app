export type PendleV2Markets = {
  total: number;
  limit: number;
  skip: number;
  results: Array<PendleV2Market>;
};

export type PendleV2Market = {
  id: string;
  chainId: number;
  address: string;
  symbol: string;
  expiry: string;
  pt: {
    id: string;
    chainId: number;
    address: string;
    symbol: string;
    decimals: number;
    expiry: string;
    price: {
      usd: number;
      acc?: number;
    };
    priceUpdatedAt: string;
    name: string;
    baseType: string;
    types: Array<string>;
    protocol?: string;
    underlyingPool?: string;
    proSymbol: string;
    proIcon: string;
    zappable: boolean;
    simpleName: string;
    simpleSymbol: string;
    simpleIcon: string;
    proName: string;
    accentColor?: string;
  };
  yt: {
    id: string;
    chainId: number;
    address: string;
    symbol: string;
    decimals: number;
    expiry: string;
    price: {
      usd: number;
      acc?: number;
    };
    priceUpdatedAt: string;
    name: string;
    baseType: string;
    types: Array<string>;
    protocol?: string;
    underlyingPool?: string;
    proSymbol: string;
    proIcon: string;
    zappable: boolean;
    simpleName: string;
    simpleSymbol: string;
    simpleIcon: string;
    proName: string;
    accentColor?: string;
  };
  sy: {
    id: string;
    chainId: number;
    address: string;
    symbol: string;
    decimals: number;
    expiry: any;
    price: {
      usd: number;
      acc?: number;
    };
    priceUpdatedAt: string;
    name: string;
    baseType: string;
    types: Array<string>;
    protocol: string;
    underlyingPool: string;
    proSymbol: string;
    proIcon: string;
    zappable: boolean;
    simpleName: string;
    simpleSymbol: string;
    simpleIcon: string;
    proName: string;
    accentColor?: string;
  };
  lp: {
    id: string;
    chainId: number;
    address: string;
    symbol: string;
    decimals: number;
    expiry: string;
    price: {
      usd: number;
      acc?: number;
    };
    priceUpdatedAt: string;
    name: string;
    baseType: string;
    types: Array<string>;
    protocol?: string;
    underlyingPool?: string;
    proSymbol: string;
    proIcon: string;
    zappable: boolean;
    simpleName: string;
    simpleSymbol: string;
    simpleIcon: string;
    proName: string;
    accentColor?: string;
  };
  accountingAsset: {
    id: string;
    chainId: number;
    address: string;
    symbol: string;
    decimals: number;
    expiry: any;
    accentColor: string;
    price: {
      usd: number;
    };
    priceUpdatedAt: string;
    name: string;
    baseType: string;
    types: Array<string>;
    protocol: string;
    proSymbol: string;
    proIcon: string;
    zappable: boolean;
    simpleName: string;
    simpleSymbol: string;
    simpleIcon: string;
    proName: string;
  };
  underlyingAsset: {
    id: string;
    chainId: number;
    address: string;
    symbol: string;
    decimals: number;
    expiry: any;
    accentColor: string;
    price: {
      usd: number;
    };
    priceUpdatedAt: string;
    name: string;
    baseType: string;
    types: Array<string>;
    protocol: string;
    proSymbol: string;
    proIcon: string;
    zappable: boolean;
    simpleName: string;
    simpleSymbol: string;
    simpleIcon: string;
    proName: string;
  };
  basePricingAsset: {
    id: string;
    chainId: number;
    address: string;
    symbol: string;
    decimals: number;
    expiry: any;
    accentColor: string;
    price: {
      usd: number;
    };
    priceUpdatedAt: string;
    name: string;
    baseType: string;
    types: Array<string>;
    protocol: string;
    proSymbol: string;
    proIcon: string;
    zappable: boolean;
    simpleName: string;
    simpleSymbol: string;
    simpleIcon: string;
    proName: string;
  };
  protocol: string;
  underlyingPool?: string;
  proSymbol: string;
  proIcon: string;
  assetRepresentation: string;
  isWhitelistedPro: boolean;
  isWhitelistedSimple: boolean;
  votable: boolean;
  isActive: boolean;
  isWhitelistedLimitOrder: boolean;
  accentColor: string;
  totalPt: number;
  totalSy: number;
  totalLp: number;
  liquidity: {
    usd: number;
    acc: number;
  };
  tradingVolume: {
    usd: number;
  };
  underlyingInterestApy: number;
  underlyingRewardApy: number;
  underlyingApy: number;
  impliedApy: number;
  ytFloatingApy: number;
  ptDiscount: number;
  swapFeeApy: number;
  pendleApy: number;
  arbApy: number;
  aggregatedApy: number;
  maxBoostedApy: number;
  lpRewardApy: number;
  voterApy: number;
  ytRoi: number;
  ptRoi: number;
  dataUpdatedAt: string;
  categoryIds: Array<string>;
  timestamp: string;
  scalarRoot: number;
  initialAnchor: number;
  extendedInfo: {
    floatingPt: number;
    floatingSy: number;
    pyUnit: string;
    ptEqualsPyUnit: boolean;
    underlyingAssetWorthMore?: string;
    nativeWithdrawalURL?: string;
    movement10Percent: {
      ptMovementUpUsd: number;
      ptMovementDownUsd: number;
      ytMovementUpUsd: number;
      ytMovementDownUsd: number;
    };
    feeRate: number;
    yieldRange: {
      min: number;
      max: number;
    };
    nativeDepositURL?: string;
    sySupplyCap?: number;
    syCurrentSupply?: number;
  };
  isFeatured: boolean;
  isPopular: boolean;
  tvlThresholdTimestamp: string;
  isNew: boolean;
  name: string;
  simpleName: string;
  simpleSymbol: string;
  simpleIcon: string;
  proName: string;
  farmName: string;
  farmSymbol: string;
  farmSimpleName: string;
  farmSimpleSymbol: string;
  farmSimpleIcon: string;
  farmProName: string;
  farmProSymbol: string;
  farmProIcon: string;
};
export type PendleV2FeaturedMarket = {
  results: Array<{
    id: string;
    chainId: number;
    address: string;
    symbol: string;
    expiry: string;
    pt: {
      id: string;
      chainId: number;
      address: string;
      symbol: string;
      decimals: number;
      expiry: string;
      accentColor: string;
      price: {
        usd: number;
        acc?: number;
      };
      priceUpdatedAt: string;
      name: string;
      baseType: string;
      types: Array<string>;
      protocol: string;
      underlyingPool: string;
      proSymbol: string;
      proIcon: string;
      zappable: boolean;
      simpleName: string;
      simpleSymbol: string;
      simpleIcon: string;
      proName: string;
    };
    yt: {
      id: string;
      chainId: number;
      address: string;
      symbol: string;
      decimals: number;
      expiry: string;
      accentColor: string;
      price: {
        usd: number;
        acc?: number;
      };
      priceUpdatedAt: string;
      name: string;
      baseType: string;
      types: Array<string>;
      protocol: string;
      underlyingPool: string;
      proSymbol: string;
      proIcon: string;
      zappable: boolean;
      simpleName: string;
      simpleSymbol: string;
      simpleIcon: string;
      proName: string;
    };
    sy: {
      id: string;
      chainId: number;
      address: string;
      symbol: string;
      decimals: number;
      expiry: any;
      accentColor: string;
      price: {
        usd: number;
        acc?: number;
      };
      priceUpdatedAt: string;
      name: string;
      baseType: string;
      types: Array<string>;
      protocol: string;
      underlyingPool: string;
      proSymbol: string;
      proIcon: string;
      zappable: boolean;
      simpleName: string;
      simpleSymbol: string;
      simpleIcon: string;
      proName: string;
    };
    lp: {
      id: string;
      chainId: number;
      address: string;
      symbol: string;
      decimals: number;
      expiry: string;
      accentColor: string;
      price: {
        usd: number;
        acc?: number;
      };
      priceUpdatedAt: string;
      name: string;
      baseType: string;
      types: Array<string>;
      protocol: string;
      underlyingPool: string;
      proSymbol: string;
      proIcon: string;
      zappable: boolean;
      simpleName: string;
      simpleSymbol: string;
      simpleIcon: string;
      proName: string;
    };
    accountingAsset: {
      id: string;
      chainId: number;
      address: string;
      symbol: string;
      decimals: number;
      expiry: any;
      accentColor: string;
      price: {
        usd: number;
      };
      priceUpdatedAt: string;
      name: string;
      baseType: string;
      types: Array<string>;
      protocol: string;
      proSymbol: string;
      proIcon: string;
      zappable: boolean;
      simpleName: string;
      simpleSymbol: string;
      simpleIcon: string;
      proName: string;
    };
    underlyingAsset: {
      id: string;
      chainId: number;
      address: string;
      symbol: string;
      decimals: number;
      expiry: any;
      accentColor: string;
      price: {
        usd: number;
      };
      priceUpdatedAt: string;
      name: string;
      baseType: string;
      types: Array<string>;
      protocol: string;
      proSymbol: string;
      proIcon: string;
      zappable: boolean;
      simpleName: string;
      simpleSymbol: string;
      simpleIcon: string;
      proName: string;
    };
    basePricingAsset: {
      id: string;
      chainId: number;
      address: string;
      symbol: string;
      decimals: number;
      expiry: any;
      accentColor: string;
      price: {
        usd: number;
      };
      priceUpdatedAt: string;
      name: string;
      baseType: string;
      types: Array<string>;
      protocol: string;
      proSymbol: string;
      proIcon: string;
      zappable: boolean;
      simpleName: string;
      simpleSymbol: string;
      simpleIcon: string;
      proName: string;
    };
    rewardTokens: Array<any>;
    inputTokens: Array<{
      id: string;
      chainId: number;
      address: string;
      symbol: string;
      decimals: number;
      expiry: any;
      accentColor: string;
      price: {
        usd: number;
      };
      priceUpdatedAt: string;
      name: string;
      baseType: string;
      types: Array<string>;
      protocol: string;
      proSymbol: string;
      proIcon: string;
      zappable: boolean;
      simpleName: string;
      simpleSymbol: string;
      simpleIcon: string;
      proName: string;
    }>;
    outputTokens: Array<{
      id: string;
      chainId: number;
      address: string;
      symbol: string;
      decimals: number;
      expiry: any;
      accentColor: string;
      price: {
        usd: number;
      };
      priceUpdatedAt: string;
      name: string;
      baseType: string;
      types: Array<string>;
      protocol: string;
      proSymbol: string;
      proIcon: string;
      zappable: boolean;
      simpleName: string;
      simpleSymbol: string;
      simpleIcon: string;
      proName: string;
    }>;
    protocol: string;
    underlyingPool: string;
    proSymbol: string;
    proIcon: string;
    assetRepresentation: string;
    isWhitelistedPro: boolean;
    isWhitelistedSimple: boolean;
    votable: boolean;
    isActive: boolean;
    isWhitelistedLimitOrder: boolean;
    accentColor: string;
    totalPt: number;
    totalSy: number;
    totalLp: number;
    totalActiveSupply: number;
    liquidity: {
      usd: number;
      acc: number;
    };
    tradingVolume: {
      usd: number;
    };
    underlyingInterestApy: number;
    underlyingRewardApy: number;
    underlyingRewardApyBreakdown: Array<any>;
    underlyingApy: number;
    impliedApy: number;
    ytFloatingApy: number;
    ptDiscount: number;
    swapFeeApy: number;
    pendleApy: number;
    arbApy: number;
    aggregatedApy: number;
    maxBoostedApy: number;
    lpRewardApy: number;
    voterApy: number;
    ytRoi: number;
    ptRoi: number;
    estimatedDailyPoolRewards: Array<{
      asset: {
        id: string;
        chainId: number;
        address: string;
        symbol: string;
        decimals: number;
        accentColor: any;
        price: {
          usd: number;
        };
        priceUpdatedAt: string;
        name: string;
      };
      amount: number;
    }>;
    dataUpdatedAt: string;
    liquidityChange24h: number;
    tradingVolumeChange24h: number;
    impliedApyChange24h: number;
    ytFloatingApyChange24h: number;
    ptDiscountChange24h: number;
    swapFeeApyChange24h: number;
    pendleApyChange24h: number;
    aggregatedApyChange24h: number;
    voterApyChange24h: number;
    categoryIds: Array<string>;
    timestamp: string;
    scalarRoot: number;
    initialAnchor: number;
    extendedInfo: {
      floatingPt: number;
      floatingSy: number;
      totalTvl: number;
      pyUnit: string;
      ptEqualsPyUnit: boolean;
      movement10Percent: {
        ptMovementUpUsd: number;
        ptMovementDownUsd: number;
        ytMovementUpUsd: number;
        ytMovementDownUsd: number;
      };
      feeRate: number;
      yieldRange: {
        min: number;
        max: number;
      };
      underlyingAssetSupply: number;
      sySupplyCap?: number;
      syCurrentSupply?: number;
      underlyingAssetWorthMore?: string;
      nativeWithdrawalURL?: string;
      nativeDepositURL?: string;
    };
    tvlThresholdTimestamp: string;
    isNew: boolean;
    name: string;
    simpleName: string;
    simpleSymbol: string;
    simpleIcon: string;
    proName: string;
    farmName: string;
    farmSymbol: string;
    farmSimpleName: string;
    farmSimpleSymbol: string;
    farmSimpleIcon: string;
    farmProName: string;
    farmProSymbol: string;
    farmProIcon: string;
    underlyingInterestApyChange24h?: number;
    underlyingApyChange24h?: number;
  }>;
};
